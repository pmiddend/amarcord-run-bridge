# coding: utf-8

"""
    AMARCORD OpenAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.5.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from amarcord_open.models.json_indexing_result import JsonIndexingResult

class TestJsonIndexingResult(unittest.TestCase):
    """JsonIndexingResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JsonIndexingResult:
        """Test JsonIndexingResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JsonIndexingResult`
        """
        model = JsonIndexingResult()
        if include_optional:
            return JsonIndexingResult(
                id = 56,
                created = 56,
                started = 56,
                stopped = 56,
                parameters = amarcord_open.models.json_indexing_parameters.JsonIndexingParameters(
                    id = 56, 
                    cell_description = '', 
                    is_online = True, 
                    command_line = '', 
                    geometry_file = '', ),
                program_version = '',
                run_internal_id = 56,
                run_external_id = 56,
                frames = 56,
                hits = 56,
                indexed_frames = 56,
                indexed_crystals = 56,
                status = 'queued',
                detector_shift_x_mm = 1.337,
                detector_shift_y_mm = 1.337,
                geometry_file = '',
                geometry_hash = '',
                generated_geometry_file = '',
                unit_cell_histograms_file_id = 56,
                has_error = True
            )
        else:
            return JsonIndexingResult(
                id = 56,
                created = 56,
                parameters = amarcord_open.models.json_indexing_parameters.JsonIndexingParameters(
                    id = 56, 
                    cell_description = '', 
                    is_online = True, 
                    command_line = '', 
                    geometry_file = '', ),
                program_version = '',
                run_internal_id = 56,
                run_external_id = 56,
                frames = 56,
                hits = 56,
                indexed_frames = 56,
                indexed_crystals = 56,
                status = 'queued',
                geometry_file = '',
                geometry_hash = '',
                generated_geometry_file = '',
                has_error = True,
        )
        """

    def testJsonIndexingResult(self):
        """Test JsonIndexingResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
