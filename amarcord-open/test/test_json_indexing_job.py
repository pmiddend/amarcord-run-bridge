# coding: utf-8

"""
    AMARCORD OpenAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.5.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from amarcord_open.models.json_indexing_job import JsonIndexingJob

class TestJsonIndexingJob(unittest.TestCase):
    """JsonIndexingJob unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JsonIndexingJob:
        """Test JsonIndexingJob
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JsonIndexingJob`
        """
        model = JsonIndexingJob()
        if include_optional:
            return JsonIndexingJob(
                id = 56,
                job_id = 56,
                job_status = 'queued',
                started = 56,
                stopped = 56,
                is_online = True,
                stream_file = '',
                source = '',
                cell_description = '',
                geometry_file_input = '',
                geometry_file_output = '',
                command_line = '',
                run_internal_id = 56,
                run_external_id = 56,
                beamtime = amarcord_open.models.json_beamtime.JsonBeamtime(
                    id = 56, 
                    external_id = '', 
                    proposal = '', 
                    beamline = '', 
                    title = '', 
                    comment = '', 
                    start = 56, 
                    end = 56, 
                    chemical_names = [
                        ''
                        ], 
                    analysis_output_path = '', ),
                input_file_globs = [
                    ''
                    ]
            )
        else:
            return JsonIndexingJob(
                id = 56,
                job_status = 'queued',
                is_online = True,
                source = '',
                geometry_file_input = '',
                geometry_file_output = '',
                command_line = '',
                run_internal_id = 56,
                run_external_id = 56,
                beamtime = amarcord_open.models.json_beamtime.JsonBeamtime(
                    id = 56, 
                    external_id = '', 
                    proposal = '', 
                    beamline = '', 
                    title = '', 
                    comment = '', 
                    start = 56, 
                    end = 56, 
                    chemical_names = [
                        ''
                        ], 
                    analysis_output_path = '', ),
                input_file_globs = [
                    ''
                    ],
        )
        """

    def testJsonIndexingJob(self):
        """Test JsonIndexingJob"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
