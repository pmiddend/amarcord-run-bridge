# coding: utf-8

"""
    AMARCORD OpenAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.5.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.json_read_new_analysis_output import JsonReadNewAnalysisOutput

class TestJsonReadNewAnalysisOutput(unittest.TestCase):
    """JsonReadNewAnalysisOutput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JsonReadNewAnalysisOutput:
        """Test JsonReadNewAnalysisOutput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JsonReadNewAnalysisOutput`
        """
        model = JsonReadNewAnalysisOutput()
        if include_optional:
            return JsonReadNewAnalysisOutput(
                searchable_attributi = [
                    openapi_client.models.json_attributo.JsonAttributo(
                        id = 56, 
                        name = '', 
                        description = '', 
                        group = '', 
                        associated_table = 'run', 
                        attributo_type_integer = openapi_client.models.json_schema_integer.JSONSchemaInteger(
                            type = 'integer', 
                            format = 'date-time', ), 
                        attributo_type_number = openapi_client.models.json_schema_number.JSONSchemaNumber(
                            type = 'number', 
                            minimum = 1.337, 
                            maximum = 1.337, 
                            exclusive_minimum = 1.337, 
                            exclusive_maximum = 1.337, 
                            suffix = '', 
                            format = 'standard-unit', 
                            tolerance = 1.337, 
                            tolerance_is_absolute = True, ), 
                        attributo_type_string = openapi_client.models.json_schema_string.JSONSchemaString(
                            type = 'string', 
                            enum = [
                                ''
                                ], ), 
                        attributo_type_array = openapi_client.models.json_schema_array.JSONSchemaArray(
                            type = 'array', 
                            item_type = 'string', 
                            min_items = 56, 
                            max_items = 56, ), 
                        attributo_type_boolean = openapi_client.models.json_schema_boolean.JSONSchemaBoolean(
                            type = 'boolean', ), )
                    ],
                attributi = [
                    openapi_client.models.json_attributo.JsonAttributo(
                        id = 56, 
                        name = '', 
                        description = '', 
                        group = '', 
                        associated_table = 'run', 
                        attributo_type_integer = openapi_client.models.json_schema_integer.JSONSchemaInteger(
                            type = 'integer', 
                            format = 'date-time', ), 
                        attributo_type_number = openapi_client.models.json_schema_number.JSONSchemaNumber(
                            type = 'number', 
                            minimum = 1.337, 
                            maximum = 1.337, 
                            exclusive_minimum = 1.337, 
                            exclusive_maximum = 1.337, 
                            suffix = '', 
                            format = 'standard-unit', 
                            tolerance = 1.337, 
                            tolerance_is_absolute = True, ), 
                        attributo_type_string = openapi_client.models.json_schema_string.JSONSchemaString(
                            type = 'string', 
                            enum = [
                                ''
                                ], ), 
                        attributo_type_array = openapi_client.models.json_schema_array.JSONSchemaArray(
                            type = 'array', 
                            item_type = 'string', 
                            min_items = 56, 
                            max_items = 56, ), 
                        attributo_type_boolean = openapi_client.models.json_schema_boolean.JSONSchemaBoolean(
                            type = 'boolean', ), )
                    ],
                chemical_id_to_name = [
                    openapi_client.models.json_chemical_id_and_name.JsonChemicalIdAndName(
                        chemical_id = 56, 
                        name = '', )
                    ],
                experiment_types = [
                    openapi_client.models.json_experiment_type_with_beamtime_information.JsonExperimentTypeWithBeamtimeInformation(
                        experiment_type = openapi_client.models.json_experiment_type.JsonExperimentType(
                            id = 56, 
                            name = '', 
                            attributi = [
                                openapi_client.models.json_attributi_id_and_role.JsonAttributiIdAndRole(
                                    id = 56, 
                                    role = 'crystal', )
                                ], ), 
                        beamtime = openapi_client.models.json_beamtime.JsonBeamtime(
                            id = 56, 
                            external_id = '', 
                            proposal = '', 
                            beamline = '', 
                            title = '', 
                            comment = '', 
                            start = 56, 
                            end = 56, 
                            chemical_names = [
                                ''
                                ], 
                            analysis_output_path = '', ), )
                    ],
                filtered_data_sets = [
                    openapi_client.models.json_data_set.JsonDataSet(
                        id = 56, 
                        experiment_type_id = 56, 
                        beamtime_id = 56, 
                        attributi = [
                            openapi_client.models.json_attributo_value.JsonAttributoValue(
                                attributo_id = 56, 
                                attributo_value_str = '', 
                                attributo_value_int = 56, 
                                attributo_value_chemical = 56, 
                                attributo_value_datetime = 56, 
                                attributo_value_float = 1.337, 
                                attributo_value_bool = True, 
                                attributo_value_list_str = [
                                    ''
                                    ], 
                                attributo_value_list_float = [
                                    1.337
                                    ], 
                                attributo_value_list_bool = [
                                    True
                                    ], )
                            ], )
                    ],
                data_set_statistics = [
                    openapi_client.models.json_data_set_statistics.JsonDataSetStatistics(
                        data_set_id = 56, 
                        run_count = 56, 
                        merge_results_count = 56, 
                        indexed_frames = 56, 
                        merge_or_indexing_jobs_running = True, )
                    ],
                attributi_values = [
                    openapi_client.models.json_attributo_value.JsonAttributoValue(
                        attributo_id = 56, 
                        attributo_value_str = '', 
                        attributo_value_int = 56, 
                        attributo_value_chemical = 56, 
                        attributo_value_datetime = 56, 
                        attributo_value_float = 1.337, 
                        attributo_value_bool = True, 
                        attributo_value_list_str = [
                            ''
                            ], 
                        attributo_value_list_float = [
                            1.337
                            ], 
                        attributo_value_list_bool = [
                            True
                            ], )
                    ]
            )
        else:
            return JsonReadNewAnalysisOutput(
                searchable_attributi = [
                    openapi_client.models.json_attributo.JsonAttributo(
                        id = 56, 
                        name = '', 
                        description = '', 
                        group = '', 
                        associated_table = 'run', 
                        attributo_type_integer = openapi_client.models.json_schema_integer.JSONSchemaInteger(
                            type = 'integer', 
                            format = 'date-time', ), 
                        attributo_type_number = openapi_client.models.json_schema_number.JSONSchemaNumber(
                            type = 'number', 
                            minimum = 1.337, 
                            maximum = 1.337, 
                            exclusive_minimum = 1.337, 
                            exclusive_maximum = 1.337, 
                            suffix = '', 
                            format = 'standard-unit', 
                            tolerance = 1.337, 
                            tolerance_is_absolute = True, ), 
                        attributo_type_string = openapi_client.models.json_schema_string.JSONSchemaString(
                            type = 'string', 
                            enum = [
                                ''
                                ], ), 
                        attributo_type_array = openapi_client.models.json_schema_array.JSONSchemaArray(
                            type = 'array', 
                            item_type = 'string', 
                            min_items = 56, 
                            max_items = 56, ), 
                        attributo_type_boolean = openapi_client.models.json_schema_boolean.JSONSchemaBoolean(
                            type = 'boolean', ), )
                    ],
                attributi = [
                    openapi_client.models.json_attributo.JsonAttributo(
                        id = 56, 
                        name = '', 
                        description = '', 
                        group = '', 
                        associated_table = 'run', 
                        attributo_type_integer = openapi_client.models.json_schema_integer.JSONSchemaInteger(
                            type = 'integer', 
                            format = 'date-time', ), 
                        attributo_type_number = openapi_client.models.json_schema_number.JSONSchemaNumber(
                            type = 'number', 
                            minimum = 1.337, 
                            maximum = 1.337, 
                            exclusive_minimum = 1.337, 
                            exclusive_maximum = 1.337, 
                            suffix = '', 
                            format = 'standard-unit', 
                            tolerance = 1.337, 
                            tolerance_is_absolute = True, ), 
                        attributo_type_string = openapi_client.models.json_schema_string.JSONSchemaString(
                            type = 'string', 
                            enum = [
                                ''
                                ], ), 
                        attributo_type_array = openapi_client.models.json_schema_array.JSONSchemaArray(
                            type = 'array', 
                            item_type = 'string', 
                            min_items = 56, 
                            max_items = 56, ), 
                        attributo_type_boolean = openapi_client.models.json_schema_boolean.JSONSchemaBoolean(
                            type = 'boolean', ), )
                    ],
                chemical_id_to_name = [
                    openapi_client.models.json_chemical_id_and_name.JsonChemicalIdAndName(
                        chemical_id = 56, 
                        name = '', )
                    ],
                experiment_types = [
                    openapi_client.models.json_experiment_type_with_beamtime_information.JsonExperimentTypeWithBeamtimeInformation(
                        experiment_type = openapi_client.models.json_experiment_type.JsonExperimentType(
                            id = 56, 
                            name = '', 
                            attributi = [
                                openapi_client.models.json_attributi_id_and_role.JsonAttributiIdAndRole(
                                    id = 56, 
                                    role = 'crystal', )
                                ], ), 
                        beamtime = openapi_client.models.json_beamtime.JsonBeamtime(
                            id = 56, 
                            external_id = '', 
                            proposal = '', 
                            beamline = '', 
                            title = '', 
                            comment = '', 
                            start = 56, 
                            end = 56, 
                            chemical_names = [
                                ''
                                ], 
                            analysis_output_path = '', ), )
                    ],
                filtered_data_sets = [
                    openapi_client.models.json_data_set.JsonDataSet(
                        id = 56, 
                        experiment_type_id = 56, 
                        beamtime_id = 56, 
                        attributi = [
                            openapi_client.models.json_attributo_value.JsonAttributoValue(
                                attributo_id = 56, 
                                attributo_value_str = '', 
                                attributo_value_int = 56, 
                                attributo_value_chemical = 56, 
                                attributo_value_datetime = 56, 
                                attributo_value_float = 1.337, 
                                attributo_value_bool = True, 
                                attributo_value_list_str = [
                                    ''
                                    ], 
                                attributo_value_list_float = [
                                    1.337
                                    ], 
                                attributo_value_list_bool = [
                                    True
                                    ], )
                            ], )
                    ],
                data_set_statistics = [
                    openapi_client.models.json_data_set_statistics.JsonDataSetStatistics(
                        data_set_id = 56, 
                        run_count = 56, 
                        merge_results_count = 56, 
                        indexed_frames = 56, 
                        merge_or_indexing_jobs_running = True, )
                    ],
                attributi_values = [
                    openapi_client.models.json_attributo_value.JsonAttributoValue(
                        attributo_id = 56, 
                        attributo_value_str = '', 
                        attributo_value_int = 56, 
                        attributo_value_chemical = 56, 
                        attributo_value_datetime = 56, 
                        attributo_value_float = 1.337, 
                        attributo_value_bool = True, 
                        attributo_value_list_str = [
                            ''
                            ], 
                        attributo_value_list_float = [
                            1.337
                            ], 
                        attributo_value_list_bool = [
                            True
                            ], )
                    ],
        )
        """

    def testJsonReadNewAnalysisOutput(self):
        """Test JsonReadNewAnalysisOutput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
