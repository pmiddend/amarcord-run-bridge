# coding: utf-8

"""
    AMARCORD OpenAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.5.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from amarcord_open.models.json_chemical_without_id import JsonChemicalWithoutId

class TestJsonChemicalWithoutId(unittest.TestCase):
    """JsonChemicalWithoutId unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JsonChemicalWithoutId:
        """Test JsonChemicalWithoutId
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JsonChemicalWithoutId`
        """
        model = JsonChemicalWithoutId()
        if include_optional:
            return JsonChemicalWithoutId(
                beamtime_id = 56,
                name = '',
                responsible_person = '',
                chemical_type = 'crystal',
                attributi = [
                    amarcord_open.models.json_attributo_value.JsonAttributoValue(
                        attributo_id = 56, 
                        attributo_value_str = '', 
                        attributo_value_int = 56, 
                        attributo_value_chemical = 56, 
                        attributo_value_datetime = 56, 
                        attributo_value_float = 1.337, 
                        attributo_value_bool = True, 
                        attributo_value_list_str = [
                            ''
                            ], 
                        attributo_value_list_float = [
                            1.337
                            ], 
                        attributo_value_list_bool = [
                            True
                            ], )
                    ],
                file_ids = [
                    56
                    ]
            )
        else:
            return JsonChemicalWithoutId(
                beamtime_id = 56,
                name = '',
                responsible_person = '',
                chemical_type = 'crystal',
                attributi = [
                    amarcord_open.models.json_attributo_value.JsonAttributoValue(
                        attributo_id = 56, 
                        attributo_value_str = '', 
                        attributo_value_int = 56, 
                        attributo_value_chemical = 56, 
                        attributo_value_datetime = 56, 
                        attributo_value_float = 1.337, 
                        attributo_value_bool = True, 
                        attributo_value_list_str = [
                            ''
                            ], 
                        attributo_value_list_float = [
                            1.337
                            ], 
                        attributo_value_list_bool = [
                            True
                            ], )
                    ],
                file_ids = [
                    56
                    ],
        )
        """

    def testJsonChemicalWithoutId(self):
        """Test JsonChemicalWithoutId"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
