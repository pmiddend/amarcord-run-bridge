# coding: utf-8

"""
    AMARCORD OpenAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.5.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.json_update_attributo_input import JsonUpdateAttributoInput

class TestJsonUpdateAttributoInput(unittest.TestCase):
    """JsonUpdateAttributoInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JsonUpdateAttributoInput:
        """Test JsonUpdateAttributoInput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JsonUpdateAttributoInput`
        """
        model = JsonUpdateAttributoInput()
        if include_optional:
            return JsonUpdateAttributoInput(
                attributo = openapi_client.models.json_attributo.JsonAttributo(
                    id = 56, 
                    name = '', 
                    description = '', 
                    group = '', 
                    associated_table = 'run', 
                    attributo_type_integer = openapi_client.models.json_schema_integer.JSONSchemaInteger(
                        type = 'integer', 
                        format = 'date-time', ), 
                    attributo_type_number = openapi_client.models.json_schema_number.JSONSchemaNumber(
                        type = 'number', 
                        minimum = 1.337, 
                        maximum = 1.337, 
                        exclusive_minimum = 1.337, 
                        exclusive_maximum = 1.337, 
                        suffix = '', 
                        format = 'standard-unit', 
                        tolerance = 1.337, 
                        tolerance_is_absolute = True, ), 
                    attributo_type_string = openapi_client.models.json_schema_string.JSONSchemaString(
                        type = 'string', 
                        enum = [
                            ''
                            ], ), 
                    attributo_type_array = openapi_client.models.json_schema_array.JSONSchemaArray(
                        type = 'array', 
                        item_type = 'string', 
                        min_items = 56, 
                        max_items = 56, ), 
                    attributo_type_boolean = openapi_client.models.json_schema_boolean.JSONSchemaBoolean(
                        type = 'boolean', ), ),
                conversion_flags = openapi_client.models.json_update_attributo_conversion_flags.JsonUpdateAttributoConversionFlags(
                    ignore_units = True, )
            )
        else:
            return JsonUpdateAttributoInput(
                attributo = openapi_client.models.json_attributo.JsonAttributo(
                    id = 56, 
                    name = '', 
                    description = '', 
                    group = '', 
                    associated_table = 'run', 
                    attributo_type_integer = openapi_client.models.json_schema_integer.JSONSchemaInteger(
                        type = 'integer', 
                        format = 'date-time', ), 
                    attributo_type_number = openapi_client.models.json_schema_number.JSONSchemaNumber(
                        type = 'number', 
                        minimum = 1.337, 
                        maximum = 1.337, 
                        exclusive_minimum = 1.337, 
                        exclusive_maximum = 1.337, 
                        suffix = '', 
                        format = 'standard-unit', 
                        tolerance = 1.337, 
                        tolerance_is_absolute = True, ), 
                    attributo_type_string = openapi_client.models.json_schema_string.JSONSchemaString(
                        type = 'string', 
                        enum = [
                            ''
                            ], ), 
                    attributo_type_array = openapi_client.models.json_schema_array.JSONSchemaArray(
                        type = 'array', 
                        item_type = 'string', 
                        min_items = 56, 
                        max_items = 56, ), 
                    attributo_type_boolean = openapi_client.models.json_schema_boolean.JSONSchemaBoolean(
                        type = 'boolean', ), ),
                conversion_flags = openapi_client.models.json_update_attributo_conversion_flags.JsonUpdateAttributoConversionFlags(
                    ignore_units = True, ),
        )
        """

    def testJsonUpdateAttributoInput(self):
        """Test JsonUpdateAttributoInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
