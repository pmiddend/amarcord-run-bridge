# coding: utf-8

"""
    AMARCORD OpenAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.5.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.json_merge_job import JsonMergeJob

class TestJsonMergeJob(unittest.TestCase):
    """JsonMergeJob unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JsonMergeJob:
        """Test JsonMergeJob
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JsonMergeJob`
        """
        model = JsonMergeJob()
        if include_optional:
            return JsonMergeJob(
                id = 56,
                job_id = 56,
                job_status = 'queued',
                parameters = openapi_client.models.json_merge_parameters.JsonMergeParameters(
                    point_group = '', 
                    space_group = '', 
                    cell_description = '', 
                    negative_handling = 'ignore', 
                    merge_model = 'unity', 
                    scale_intensities = 'off', 
                    post_refinement = True, 
                    iterations = 56, 
                    polarisation = openapi_client.models.json_polarisation.JsonPolarisation(
                        angle = 56, 
                        percent = 56, ), 
                    start_after = 56, 
                    stop_after = 56, 
                    rel_b = 1.337, 
                    no_pr = True, 
                    force_bandwidth = 1.337, 
                    force_radius = 1.337, 
                    force_lambda = 1.337, 
                    no_delta_cc_half = True, 
                    max_adu = 1.337, 
                    min_measurements = 56, 
                    logs = True, 
                    min_res = 1.337, 
                    push_res = 1.337, 
                    w = '', 
                    ambigator_command_line = '', ),
                indexing_results = [
                    openapi_client.models.json_indexing_job.JsonIndexingJob(
                        id = 56, 
                        job_id = 56, 
                        job_status = 'queued', 
                        started = 56, 
                        stopped = 56, 
                        is_online = True, 
                        stream_file = '', 
                        source = '', 
                        cell_description = '', 
                        geometry_file_input = '', 
                        geometry_file_output = '', 
                        command_line = '', 
                        run_internal_id = 56, 
                        run_external_id = 56, 
                        beamtime = openapi_client.models.json_beamtime.JsonBeamtime(
                            id = 56, 
                            external_id = '', 
                            proposal = '', 
                            beamline = '', 
                            title = '', 
                            comment = '', 
                            start = 56, 
                            end = 56, 
                            chemical_names = [
                                ''
                                ], 
                            analysis_output_path = '', ), 
                        input_file_globs = [
                            ''
                            ], )
                    ],
                files_from_indexing = [
                    openapi_client.models.json_file_output.JsonFileOutput(
                        id = 56, 
                        description = '', 
                        type_ = '', 
                        original_path = '', 
                        file_name = '', 
                        size_in_bytes = 56, )
                    ],
                point_group = '',
                cell_description = ''
            )
        else:
            return JsonMergeJob(
                id = 56,
                job_status = 'queued',
                parameters = openapi_client.models.json_merge_parameters.JsonMergeParameters(
                    point_group = '', 
                    space_group = '', 
                    cell_description = '', 
                    negative_handling = 'ignore', 
                    merge_model = 'unity', 
                    scale_intensities = 'off', 
                    post_refinement = True, 
                    iterations = 56, 
                    polarisation = openapi_client.models.json_polarisation.JsonPolarisation(
                        angle = 56, 
                        percent = 56, ), 
                    start_after = 56, 
                    stop_after = 56, 
                    rel_b = 1.337, 
                    no_pr = True, 
                    force_bandwidth = 1.337, 
                    force_radius = 1.337, 
                    force_lambda = 1.337, 
                    no_delta_cc_half = True, 
                    max_adu = 1.337, 
                    min_measurements = 56, 
                    logs = True, 
                    min_res = 1.337, 
                    push_res = 1.337, 
                    w = '', 
                    ambigator_command_line = '', ),
                indexing_results = [
                    openapi_client.models.json_indexing_job.JsonIndexingJob(
                        id = 56, 
                        job_id = 56, 
                        job_status = 'queued', 
                        started = 56, 
                        stopped = 56, 
                        is_online = True, 
                        stream_file = '', 
                        source = '', 
                        cell_description = '', 
                        geometry_file_input = '', 
                        geometry_file_output = '', 
                        command_line = '', 
                        run_internal_id = 56, 
                        run_external_id = 56, 
                        beamtime = openapi_client.models.json_beamtime.JsonBeamtime(
                            id = 56, 
                            external_id = '', 
                            proposal = '', 
                            beamline = '', 
                            title = '', 
                            comment = '', 
                            start = 56, 
                            end = 56, 
                            chemical_names = [
                                ''
                                ], 
                            analysis_output_path = '', ), 
                        input_file_globs = [
                            ''
                            ], )
                    ],
                files_from_indexing = [
                    openapi_client.models.json_file_output.JsonFileOutput(
                        id = 56, 
                        description = '', 
                        type_ = '', 
                        original_path = '', 
                        file_name = '', 
                        size_in_bytes = 56, )
                    ],
                point_group = '',
                cell_description = '',
        )
        """

    def testJsonMergeJob(self):
        """Test JsonMergeJob"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
